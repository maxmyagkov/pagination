{"version":3,"sources":["components/Loader.jsx","components/Posts.jsx","components/Pagination.jsx","components/PerPage.jsx","App.js","index.js"],"names":["Loader","class","role","Posts","posts","loader","className","map","post","id","title","Pagination","React","memo","perPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","onClick","page","length","PerPage","values","changePerPage","useState","activeValue","setActiveValue","useEffect","JSON","parse","window","localStorage","getItem","setItem","value","index","App","setPosts","setLoader","setCurrentPage","setPerPage","a","axios","get","res","data","fetchRequest","lastIndexPost","firstIndexPost","currentPosts","slice","count","namberPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29d9624d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div class=\"d-flex align-items-center\">\r\n            <strong>Loading...</strong>\r\n            <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Loader } from './Loader'\r\n\r\nexport const Posts = ({ posts, loader }) => {\r\n\r\n    if (loader) {\r\n        return <Loader />\r\n    }\r\n    return (\r\n        <ul className=\"list-group mb-3\" >\r\n            {posts.map((post) => (\r\n                <li className=\"list-group-item\" key={post.id}>{post.id} {post.title}</li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Pagination = React.memo(({ perPage, totalPosts, paginate, currentPage }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / perPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination\">\r\n                <li\r\n                    className=\"page-item \"\r\n                    onClick={() => paginate(\r\n                        currentPage !== 1\r\n                            ? currentPage - 1\r\n                            : currentPage\r\n                    )}>\r\n                    <a className=\"page-link\" >Назад</a>\r\n                </li>\r\n                {pageNumbers.map((page) => (\r\n                    <li\r\n                        onClick={() => paginate(page)}\r\n                        className={\r\n                            currentPage === page\r\n                                ? \"page-item active\"\r\n                                : \"page-item\"} key={page}>\r\n                        <a className=\"page-link\" >{page}</a>\r\n                    </li>\r\n                ))}\r\n                <li\r\n                    className=\"page-item\"\r\n                    onClick={() => paginate(\r\n                        currentPage !== pageNumbers.length\r\n                            ? currentPage + 1\r\n                            : currentPage\r\n                    )}>\r\n                    <a className=\"page-link\">Вперед</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nexport const PerPage = React.memo(({ values, changePerPage }) => {\r\n\r\n    const [activeValue, setActiveValue] = React.useState(0);\r\n\r\n\r\n    React.useEffect(() => {\r\n        setActiveValue(JSON.parse(window.localStorage.getItem('activeValue')));\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n        window.localStorage.setItem('activeValue', activeValue);\r\n    }, [activeValue]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <ul className=\"nav nav-tabs\">\r\n            <p className=\"text-primary mt-2 me-2\" >Кол-во постов на странице:</p>\r\n            {values.map((value, index) => (\r\n                <li\r\n                    key={`${value}_${index}`}\r\n                    className={\r\n                        index !== activeValue\r\n                            ? \"nav-link \"\r\n                            : \"nav-link active\"\r\n                    }\r\n                    onClick={() => {\r\n                        changePerPage(value);\r\n                        setActiveValue(index);\r\n                    }}>\r\n                    <a>{value}</a>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n})\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Posts } from \"./components/Posts\";\nimport { Pagination } from \"./components/Pagination\";\nimport { PerPage } from \"./components/PerPage\";\n\nfunction App() {\n\n  const [posts, setPosts] = React.useState([]);\n  const [loader, setLoader] = React.useState(false);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [perPage, setPerPage] = React.useState(10);\n\n\n\n  React.useEffect(() => {\n    const url = 'https://jsonplaceholder.typicode.com/posts';\n    const fetchRequest = async () => {\n      setLoader(true);\n      const res = await axios.get(url);\n      setPosts(res.data);\n      setLoader(false);\n    };\n    fetchRequest();\n\n  }, []);\n\n\n  React.useEffect(() => {\n    setCurrentPage(JSON.parse(window.localStorage.getItem('currentPage')));\n    setPerPage(JSON.parse(window.localStorage.getItem('perPage')));\n  }, []);\n\n\n  React.useEffect(() => {\n    window.localStorage.setItem('currentPage', currentPage);\n    window.localStorage.setItem('perPage', perPage);\n  }, [currentPage, perPage]);\n\n\n\n  const lastIndexPost = currentPage * perPage;\n  const firstIndexPost = lastIndexPost - perPage;\n  const currentPosts = posts.slice(firstIndexPost, lastIndexPost)\n\n\n  const paginate = (namberPage) => {\n    setCurrentPage(namberPage);\n  };\n\n  const changePerPage = (count) => {\n    setPerPage(count);\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className='container mt-4'>\n      <h1 className=\"text-primary mb-4\">Мои посты</h1>\n      <PerPage\n        values={[10, 50, 100]}\n        changePerPage={changePerPage}\n      />\n      <Posts posts={currentPosts} loader={loader} />\n      <Pagination\n        perPage={perPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}